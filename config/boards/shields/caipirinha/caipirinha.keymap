/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <200>;
        };

        shifthr: shifthr {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFTHR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            flavor = "tap-preferred";
            quick-tap-ms = <185>;
        };

        weak: weak {
            compatible = "zmk,behavior-hold-tap";
            label = "WEAK";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <230>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <125>;
            quick-tap-ms = <230>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&lt 4 ESCAPE    &lt 3 Q           &kp W                 &kp E                   &kp R                       &kp T           &none            &kp Y            &kp U        &kp I           &kp O                  &kp P                          &kp MINUS
&kp LEFT_SHIFT  &weak LEFT_GUI A  &weak LEFT_CONTROL S  &weak LEFT_ALT D        &kp F                       &kp G           &none            &kp H            &kp J        &weak RALT K    &weak RIGHT_CONTROL L  &weak RIGHT_COMMAND SEMICOLON  &weak RSHFT BACKSLASH
&kp LEFT_GUI    &kp Z             &kp X                 &kp C                   &kp V                       &kp B                            &kp M            &kp COMMA    &kp DOT         &mt LA(LCTRL) SLASH    &lt 4 SQT
                                                                &mt LEFT_CONTROL EQUAL      &lt 1 ENTER    &mt LALT TAB     &lt 1 BACKSPACE  &lt 2 SPACE  &mt RALT GRAVE
            >;
        };

    };
};
